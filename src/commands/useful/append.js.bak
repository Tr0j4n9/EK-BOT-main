// Temporarily disabled due to issue with Discord API

import Promise from 'bluebird';
import sentry from '../../sentry';
import glob from 'glob';
import R from 'ramda';

let commands;

function getCommands() {
  const glob_options = {
    realpath: true,
    nodir: true
  };

  const command_files = R.flatten([
    glob.sync(`${__dirname}/../*(!(index.js))`, glob_options),
    glob.sync(`${__dirname}/../*/index.js`, glob_options),
    glob.sync(`${__dirname}/../*/*/index.js`, glob_options),
    glob.sync(`${__dirname}/../*(!(help))/*.js`, glob_options)
  ]);

  // Merge all the commands objecs together and export.
  return R.mergeAll(R.map(js_path => {
    return require(js_path).default;
  }, command_files));
}

function parseMessage(bot, content, msg) {
  let command = content.toLowerCase().split(' ')[0].substring(1);
  let suffix = content.substring(command.length + 3);
  if (!commands) {
    commands = getCommands();
  }
  let cmd = commands[command];

  if (cmd) {
    cmd(bot, msg, suffix);
  }
  return;
}


function append(bot, msg, suffix) {
  if (!suffix) {
    bot.sendMessage(msg.channel, 'Usage: **`!!`** `text`');
    return;
  }

  Promise.resolve(msg.channel.messages.getAll('author', msg.author))
    .then(messages => {
      messages.pop();
      if (!messages[0]) {
        return;
      }

      const newCmd = messages.pop().content.trim().concat(' ').concat(suffix);
      parseMessage(bot, newCmd, msg);
    })
    .catch(err => {
      sentry(err);
      bot.sendMessage(msg.channel, `Error: ${err.message}`);
    });
}

export default {
  append: append
};

export const help = {
  append: {parameters: '[text to append]'}
};
